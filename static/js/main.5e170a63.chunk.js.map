{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/store.js","components/AppHeader/AppHeader.js","components/Layout/Layout.js","components/InputForm/InputForm.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["addContact","createAction","name","number","payload","contact","id","uuidv4","removeContact","onChangeFilter","items","createReducer","contactActions","state","action","filter","combineReducers","store","configureStore","reducer","contacts","contactReducer","AppHeader","CSSTransition","in","appear","timeout","classNames","className","Layout","children","InputForm","label","placeholder","type","value","onInput","onChange","e","target","ContactForm","notify","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleSubmit","preventDefault","props","map","el","find","onAddContact","setState","handleInput","handleNumber","this","onSubmit","Component","mapDispatchToProps","contactsActions","connect","onRemoveContact","toLowerCase","includes","TransitionGroup","component","key","onClick","onFilter","length","unmountOnExit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e170a63.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contact/add\", ({ name, number }) => ({\n  payload: {\n    contact: { id: uuidv4(), name, number },\n  },\n}));\n\n// const addContact = ({ name, number }) => ({\n//   type: \"contact/add\",\n//   payload: { contact: { id: uuidv4(), name, number } },\n// });\n\nconst removeContact = createAction(\"contact/remove\");\n\n// const removeContact = (contactId) => ({\n//   type: \"contact/remove\",\n//   payload: { contactId },\n// });\n\nconst onChangeFilter = createAction(\"contact/filter\");\n\n// const onChangeFilter = (filter) => ({\n//   type: \"contact/filter\",\n//   payload: { filter },\n// });\n\nexport default {\n  addContact,\n  removeContact,\n  onChangeFilter,\n};\n","import { combineReducers } from \"redux\";\nimport contactActions from \"./contactsActions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nconst items = createReducer([], {\n  [contactActions.addContact]: (state, action) => [\n    ...state,\n    action.payload.contact,\n  ],\n  [contactActions.removeContact]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case contactActions.addContact.type:\n//       return [...state, payload.contact];\n//     case contactActions.removeContact.type:\n//       return state.filter((contact) => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer(\"\", {\n  [contactActions.onChangeFilter]: (state, action) => action.payload,\n});\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case contactActions.onChangeFilter.type:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({ items, filter });\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactReducer from \"./contacts/contactsReducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n});\nexport default store;\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./AppHeader.css\";\nconst AppHeader = () => {\n  return (\n    <header>\n      <CSSTransition in={true} appear={true} timeout={500} classNames=\"logoIn\">\n        <h2 className=\"logo\">PhoneBook</h2>\n      </CSSTransition>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport \"./Layout.css\";\nconst Layout = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport \"./InputForm.css\";\nconst InputForm = ({ label, placeholder, type, value, onInput }) => {\n  return (\n    <label>\n      <p className=\"labelName\">{label}</p>\n      <input\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        onChange={(e) => onInput(e.target.value)}\n        className=\"input\"\n      ></input>\n    </label>\n  );\n};\n\nexport default InputForm;\n","import React, { Component } from \"react\";\nimport \"./ContactForm.css\";\nimport InputForm from \"../InputForm/InputForm\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  notify = () =>\n    toast.error(\" This contact already exist!\", {\n      position: \"top-center\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (!name || !number) {\n      return;\n    }\n    const contactName = this.props.contacts.map((el) => {\n      return el.name;\n    });\n    const validation = contactName.find((el) => el === name);\n\n    validation === name ? this.notify() : this.props.onAddContact(this.state);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleInput = (value) => {\n    this.setState({ name: value });\n  };\n  handleNumber = (value) => {\n    this.setState({ number: value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <ToastContainer />\n        <InputForm\n          label=\"Name\"\n          type=\"text\"\n          value={name}\n          placeholder=\"Enter your name\"\n          onInput={this.handleInput}\n        />\n        <InputForm\n          label=\"Number\"\n          type=\"tel\"\n          value={number}\n          placeholder=\"Enter your number\"\n          onInput={this.handleNumber}\n        />\n        <button type=\"submit\" className=\"buttonSubmit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts.items,\n  };\n};\nconst mapDispatchToProps = { onAddContact: contactsActions.addContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"./ContactList.css\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className=\"contactsList\">\n      {contacts.map((contact) => (\n        <CSSTransition key={contact.id} timeout={250} classNames=\"contactIn\">\n          <li className=\"contactItem\">\n            <span className=\"contactText\">\n              {contact.name} : {contact.number}\n            </span>\n            <button\n              type=\"button\"\n              className=\"removeBtn\"\n              onClick={() => onRemoveContact(contact.id)}\n            >\n              X\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items.filter((contact) =>\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\n  ),\n});\n\nconst mapDispatchToProps = { onRemoveContact: contactsActions.removeContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nimport \"./Filter.css\";\nconst Filter = ({ value, onFilter }) => {\n  return (\n    <div className=\"filterContainer\">\n      <p className=\"filterTitle\">Find contact by name</p>\n      <label>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => onFilter(e.target.value)}\n          className=\"filterInput\"\n        />\n      </label>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = { onFilter: contactsActions.onChangeFilter };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport AppHeader from \"./components/AppHeader/AppHeader\";\nimport Layout from \"./components/Layout/Layout\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport \"./App.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\n\nconst App = ({ contacts }) => {\n  return (\n    <Layout>\n      <AppHeader />\n      <ContactForm />\n      <CSSTransition\n        in={contacts.length > 1}\n        timeout={250}\n        classNames=\"filterIn\"\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n\n      <ContactList />\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}